
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SET RIGHT LEFT UP DOWN IFBLOCK ENDIF REPEAT ENDREPEAT PROCEDURE ENDPROC CALL DIVIDE EQUALS ID LPAREN MINUS NUMBER PLUS RPAREN TIMES NEWLINE INDENT DEDENT WSprogram : program statement\n               | statement\n               | block : NEWLINE INDENT groupstat DEDENTgroupstat : groupstat statement\n                 | statement : command NEWLINE\n                 | commandcommand : IFBLOCK RIGHT block ENDIF\n               | IFBLOCK DOWN block ENDIF\n               | IFBLOCK UP block ENDIF\n               | IFBLOCK LEFT block ENDIFcommand : REPEAT expr block ENDREPEATcommand : PROCEDURE ID block ENDPROCcommand : CALL IDcommand : RIGHT expr\n               | LEFT expr\n               | UP expr\n               | DOWN exprcommand : SET ID EQUALS exprexpr : expr PLUS factor\n            | expr MINUS factor\n            | factorfactor : factor TIMES fact\n              | factor DIVIDE fact\n              | factfact : NUMBERfact : IDfact : LPAREN expr RPAREN'
    
_lr_action_items = {'IFBLOCK':([0,1,2,3,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[4,4,-2,-8,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,4,-5,]),'REPEAT':([0,1,2,3,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[9,9,-2,-8,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,9,-5,]),'PROCEDURE':([0,1,2,3,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[10,10,-2,-8,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,10,-5,]),'CALL':([0,1,2,3,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[11,11,-2,-8,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,11,-5,]),'RIGHT':([0,1,2,3,4,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[5,5,-2,-8,15,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,5,-5,]),'LEFT':([0,1,2,3,4,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[8,8,-2,-8,18,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,8,-5,]),'UP':([0,1,2,3,4,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[7,7,-2,-8,17,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,7,-5,]),'DOWN':([0,1,2,3,4,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[6,6,-2,-8,16,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,6,-5,]),'SET':([0,1,2,3,13,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[12,12,-2,-8,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,12,-5,]),'$end':([0,1,2,3,13,14,19,20,21,22,23,25,26,27,30,45,47,48,49,50,51,52,53,54,55,56,57,],[-3,0,-2,-8,-1,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,]),'NEWLINE':([3,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,45,47,48,49,50,51,52,53,54,55,56,57,],[14,33,33,33,33,-16,-23,-26,-27,-28,-19,-18,-17,33,33,-15,-9,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,]),'DEDENT':([3,14,19,20,21,22,23,25,26,27,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,],[-8,-7,-16,-23,-26,-27,-28,-19,-18,-17,-15,-9,-6,-10,-11,-12,-21,-22,-24,-25,-29,-13,-14,-20,59,-5,]),'NUMBER':([5,6,7,8,9,24,37,38,39,40,44,],[22,22,22,22,22,22,22,22,22,22,22,]),'ID':([5,6,7,8,9,10,11,12,24,37,38,39,40,44,],[23,23,23,23,23,29,30,31,23,23,23,23,23,23,]),'LPAREN':([5,6,7,8,9,24,37,38,39,40,44,],[24,24,24,24,24,24,24,24,24,24,24,]),'PLUS':([19,20,21,22,23,25,26,27,28,41,50,51,52,53,54,57,],[37,-23,-26,-27,-28,37,37,37,37,37,-21,-22,-24,-25,-29,37,]),'MINUS':([19,20,21,22,23,25,26,27,28,41,50,51,52,53,54,57,],[38,-23,-26,-27,-28,38,38,38,38,38,-21,-22,-24,-25,-29,38,]),'RPAREN':([20,21,22,23,41,50,51,52,53,54,],[-23,-26,-27,-28,54,-21,-22,-24,-25,-29,]),'TIMES':([20,21,22,23,50,51,52,53,54,],[39,-26,-27,-28,39,39,-24,-25,-29,]),'DIVIDE':([20,21,22,23,50,51,52,53,54,],[40,-26,-27,-28,40,40,-24,-25,-29,]),'EQUALS':([31,],[44,]),'ENDIF':([32,34,35,36,59,],[45,47,48,49,-4,]),'INDENT':([33,],[46,]),'ENDREPEAT':([42,59,],[55,-4,]),'ENDPROC':([43,59,],[56,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,58,],[2,13,60,]),'command':([0,1,58,],[3,3,3,]),'expr':([5,6,7,8,9,24,44,],[19,25,26,27,28,41,57,]),'factor':([5,6,7,8,9,24,37,38,44,],[20,20,20,20,20,20,50,51,20,]),'fact':([5,6,7,8,9,24,37,38,39,40,44,],[21,21,21,21,21,21,21,21,52,53,21,]),'block':([15,16,17,18,28,29,],[32,34,35,36,42,43,]),'groupstat':([46,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','lexparse_b.py',148),
  ('program -> statement','program',1,'p_program','lexparse_b.py',149),
  ('program -> <empty>','program',0,'p_program','lexparse_b.py',150),
  ('block -> NEWLINE INDENT groupstat DEDENT','block',4,'p_block','lexparse_b.py',158),
  ('groupstat -> groupstat statement','groupstat',2,'p_groupstat','lexparse_b.py',162),
  ('groupstat -> <empty>','groupstat',0,'p_groupstat','lexparse_b.py',163),
  ('statement -> command NEWLINE','statement',2,'p_statement','lexparse_b.py',171),
  ('statement -> command','statement',1,'p_statement','lexparse_b.py',172),
  ('command -> IFBLOCK RIGHT block ENDIF','command',4,'p_command_ifblock','lexparse_b.py',181),
  ('command -> IFBLOCK DOWN block ENDIF','command',4,'p_command_ifblock','lexparse_b.py',182),
  ('command -> IFBLOCK UP block ENDIF','command',4,'p_command_ifblock','lexparse_b.py',183),
  ('command -> IFBLOCK LEFT block ENDIF','command',4,'p_command_ifblock','lexparse_b.py',184),
  ('command -> REPEAT expr block ENDREPEAT','command',4,'p_command_repeat','lexparse_b.py',189),
  ('command -> PROCEDURE ID block ENDPROC','command',4,'p_command_procedure','lexparse_b.py',194),
  ('command -> CALL ID','command',2,'p_command_call','lexparse_b.py',199),
  ('command -> RIGHT expr','command',2,'p_command_dir','lexparse_b.py',204),
  ('command -> LEFT expr','command',2,'p_command_dir','lexparse_b.py',205),
  ('command -> UP expr','command',2,'p_command_dir','lexparse_b.py',206),
  ('command -> DOWN expr','command',2,'p_command_dir','lexparse_b.py',207),
  ('command -> SET ID EQUALS expr','command',4,'p_command_set','lexparse_b.py',212),
  ('expr -> expr PLUS factor','expr',3,'p_expr','lexparse_b.py',217),
  ('expr -> expr MINUS factor','expr',3,'p_expr','lexparse_b.py',218),
  ('expr -> factor','expr',1,'p_expr','lexparse_b.py',219),
  ('factor -> factor TIMES fact','factor',3,'p_factor','lexparse_b.py',227),
  ('factor -> factor DIVIDE fact','factor',3,'p_factor','lexparse_b.py',228),
  ('factor -> fact','factor',1,'p_factor','lexparse_b.py',229),
  ('fact -> NUMBER','fact',1,'p_fact_number','lexparse_b.py',237),
  ('fact -> ID','fact',1,'p_fact_var','lexparse_b.py',241),
  ('fact -> LPAREN expr RPAREN','fact',3,'p_fact_paren','lexparse_b.py',245),
]
